name: "gh-federation"
description: "git clone other repo in the federation"
author: "@KOBA789"

inputs:
  endpoint:
    description: gh-federation lambda endpoint
    required: true
  repos:
    description: gh-federation repositories
    default: ''

runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v6
      env:
        GH_FEDERATION_ENDPOINT: ${{ inputs.endpoint }}
      with:
        script: |
          const idToken = await core.getIDToken();
          const hook = (request, route) => {
            const endpoint = request.endpoint.merge(route);
            endpoint.headers.authorization = `Bearer ${idToken}`;
            return request(endpoint);
          };
          const { data } = await github.request("POST /token", {
            baseUrl: process.env["GH_FEDERATION_ENDPOINT"],
            request: { hook },
          });
          const accessToken = data["token"];
          core.setSecret(accessToken);
          core.exportVariable("GH_FEDERATION_ACCESS_TOKEN", accessToken);

    - name: Store access token
      shell: bash
      run: |
        git config --global --replace-all credential.helper ''
        git config --global --add credential.helper store
        echo $'protocol=https\nhost=github.com\nusername=x-access-token\npassword='"${GH_FEDERATION_ACCESS_TOKEN}"$'\n' | \
          git credential-store store

    - name: Store access token for repos as extraheader
      if: inputs.repos != ''
      shell: bash
      env:
        REPOS: ${{ inputs.repos }}
      run: |
        TOKEN=$(echo -n "x-access-token:${GH_FEDERATION_ACCESS_TOKEN}" | base64)
        echo "::add-mask::${TOKEN}"
        for repo in ${REPOS}; do
          echo "config extraheader for ${repo}"
          git config --global "http.https://github.com/${repo}.extraheader" "Authorization: Basic ${TOKEN}"
        done
